{
  "active": false,
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Crypto",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Crypto": {
      "main": [
        [
          {
            "node": "Supabase",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [],
        [
          {
            "node": "Supabase1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase1": {
      "main": [
        [
          {
            "node": "Brevo",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-05-07T04:15:26.640Z",
  "id": "g0zHunW80BxXMCse",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "ski dubai",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes"
            }
          ]
        }
      },
      "id": "bba075d9-fe25-4265-ab39-d12a9c59f562",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        220,
        260
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api-prod.maflec.com/global-snow/v1/viva/rest-search-calender-availability/SNOWBOARD,ADULT,LEVEL1/2024-05-01/2024-05-31/true",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "x-apikey",
              "value": "e8ztWvmAHghsoC1zALsRQKbPXAmagPGt"
            },
            {
              "name": "Connection",
              "value": "keep-alive"
            },
            {
              "name": "Content-Length",
              "value": "0"
            }
          ]
        },
        "options": {}
      },
      "id": "e5a0db0d-f932-460c-b9b3-a5b4800b022c",
      "name": "HTTP Request",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        440,
        260
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "9603d120-ddf9-4168-ba97-e723a620d048",
              "leftValue": "={{ $json.appointment_date }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            },
            {
              "id": "0d3ff5da-b402-4f89-8b76-0001afa53275",
              "leftValue": "={{ $json.source_country }}",
              "rightValue": "United Arab Emirates",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "01e6b399-97cd-4b47-9bed-7a135a2a9610",
      "name": "Filter",
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2,
      "position": [
        660,
        260
      ]
    },
    {
      "parameters": {
        "jsCode": "// Initialize the email body variable\nlet emailBody = '';\n\n// Get the input data from the previous node\nconst inputJsonData = items[0].json;\n\n// Loop through each entry in the input JSON data\nitems.forEach((item) => {\n  const data = item.json;\n  emailBody += `Source Country: ${data.source_country}\\n`;\n  emailBody += `Mission Country: ${data.mission_country}\\n`;\n  emailBody += `Appointment Date: ${data.appointment_date}\\n`;\n  emailBody += `Book Now: ${data.book_now_link}\\n\\n`;\n});\n\n// Return the email body as a single string variable in the items array\nreturn [{json: { emailBody }}];"
      },
      "id": "a2ec91fe-5514-40bc-b336-ae05b70b0f7d",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        880,
        260
      ]
    },
    {
      "parameters": {
        "value": "={{ $json.emailBody }}",
        "dataPropertyName": "hashed_data"
      },
      "id": "e5679906-3886-40ad-9aa8-4253eddab7da",
      "name": "Crypto",
      "type": "n8n-nodes-base.crypto",
      "typeVersion": 1,
      "position": [
        220,
        520
      ]
    },
    {
      "parameters": {
        "operation": "get",
        "tableId": "visa_hash",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "keyValue": "1"
            }
          ]
        }
      },
      "id": "4d24de6f-346a-45ac-8627-215bcb404a95",
      "name": "Supabase",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        440,
        520
      ],
      "credentials": {
        "supabaseApi": {
          "id": "6hkQ5HhjDcu5LT4C",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "d7a01887-83e9-40b3-9a31-86826c09bff6",
              "leftValue": "={{ $json.hash }}",
              "rightValue": "={{ $('Crypto').item.json.hashed_data }}",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "3fe48e2d-3325-4f89-a95e-5a32d1e84c3d",
      "name": "If",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        660,
        520
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "tableId": "visa_hash",
        "filters": {
          "conditions": [
            {
              "keyName": "id",
              "condition": "eq",
              "keyValue": "1"
            }
          ]
        },
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "hash",
              "fieldValue": "={{ $('Crypto').item.json.hashed_data }}"
            }
          ]
        }
      },
      "id": "85db426f-3cf1-4a77-b576-cabf7dc081e5",
      "name": "Supabase1",
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        880,
        520
      ],
      "credentials": {
        "supabaseApi": {
          "id": "6hkQ5HhjDcu5LT4C",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "subject": "New Appointments",
        "textContent": "={{ $('Code').item.json.emailBody }}",
        "sender": "mertmr@gmail.com",
        "receipients": "mertmr@gmail.com, rajthakurabroad@gmail.com",
        "additionalFields": {}
      },
      "id": "2cf0cc72-642d-4c63-8472-70e58494d7ff",
      "name": "Brevo",
      "type": "n8n-nodes-base.sendInBlue",
      "typeVersion": 1,
      "position": [
        1100,
        520
      ],
      "credentials": {
        "sendInBlueApi": {
          "id": "5PmtV8hGwOTSU1in",
          "name": "Brevo account"
        }
      }
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:Schedule Trigger": {
      "recurrencyRules": []
    }
  },
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2024-05-07T04:33:28.000Z",
  "versionId": "fe291634-ae8d-46c0-9260-8a624cc633a2"
}